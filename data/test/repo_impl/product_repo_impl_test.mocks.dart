// Mocks generated by Mockito 5.4.4 from annotations
// in data/test/repo_impl/product_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:data/api_service.dart' as _i5;
import 'package:data/entity/cart_entity.dart' as _i3;
import 'package:data/entity/product_entity.dart' as _i2;
import 'package:data/repo_impl/products_repo_impl.dart' as _i7;
import 'package:domain/model/product_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductEntity_0 extends _i1.SmartFake implements _i2.ProductEntity {
  _FakeProductEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartEntity_1 extends _i1.SmartFake implements _i3.CartEntity {
  _FakeCartEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductModel_2 extends _i1.SmartFake implements _i4.ProductModel {
  _FakeProductModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  @override
  _i6.Future<List<_i2.ProductEntity>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i6.Future<List<_i2.ProductEntity>>.value(<_i2.ProductEntity>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i2.ProductEntity>>.value(<_i2.ProductEntity>[]),
      ) as _i6.Future<List<_i2.ProductEntity>>);

  @override
  _i6.Future<_i2.ProductEntity> getProductsById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProductsById,
          [id],
        ),
        returnValue: _i6.Future<_i2.ProductEntity>.value(_FakeProductEntity_0(
          this,
          Invocation.method(
            #getProductsById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ProductEntity>.value(_FakeProductEntity_0(
          this,
          Invocation.method(
            #getProductsById,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.ProductEntity>);

  @override
  _i6.Future<_i3.CartEntity> getCart(int? userId) => (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [userId],
        ),
        returnValue: _i6.Future<_i3.CartEntity>.value(_FakeCartEntity_1(
          this,
          Invocation.method(
            #getCart,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.CartEntity>.value(_FakeCartEntity_1(
          this,
          Invocation.method(
            #getCart,
            [userId],
          ),
        )),
      ) as _i6.Future<_i3.CartEntity>);
}

/// A class which mocks [ProductsRepoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsRepoImpl extends _i1.Mock implements _i7.ProductsRepoImpl {
  @override
  _i6.Future<List<_i4.ProductModel>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue:
            _i6.Future<List<_i4.ProductModel>>.value(<_i4.ProductModel>[]),
        returnValueForMissingStub:
            _i6.Future<List<_i4.ProductModel>>.value(<_i4.ProductModel>[]),
      ) as _i6.Future<List<_i4.ProductModel>>);

  @override
  _i6.Future<_i4.ProductModel> getProductsById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProductsById,
          [id],
        ),
        returnValue: _i6.Future<_i4.ProductModel>.value(_FakeProductModel_2(
          this,
          Invocation.method(
            #getProductsById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.ProductModel>.value(_FakeProductModel_2(
          this,
          Invocation.method(
            #getProductsById,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.ProductModel>);
}
